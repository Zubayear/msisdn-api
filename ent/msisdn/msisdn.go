// Code generated by ent, DO NOT EDIT.

package msisdn

import (
	"fmt"
	"huspass/model"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the msisdn type in the database.
	Label = "msisdn"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPrimaryIdentity holds the string denoting the primary_identity field in the database.
	FieldPrimaryIdentity = "primary_identity"
	// FieldPrimaryIdentityType holds the string denoting the primary_identity_type field in the database.
	FieldPrimaryIdentityType = "primary_identity_type"
	// FieldProvisioned holds the string denoting the provisioned field in the database.
	FieldProvisioned = "provisioned"
	// Table holds the table name of the msisdn in the database.
	Table = "msisdns"
)

// Columns holds all SQL columns for msisdn fields.
var Columns = []string{
	FieldID,
	FieldPrimaryIdentity,
	FieldPrimaryIdentityType,
	FieldProvisioned,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PrimaryIdentityValidator is a validator for the "primary_identity" field. It is called by the builders before save.
	PrimaryIdentityValidator func(string) error
	// DefaultProvisioned holds the default value on creation for the "provisioned" field.
	DefaultProvisioned bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// PrimaryIdentityTypeValidator is a validator for the "primary_identity_type" field enum values. It is called by the builders before save.
func PrimaryIdentityTypeValidator(pit model.PrimaryIdentityType) error {
	switch pit {
	case "Prepaid", "Postpaid":
		return nil
	default:
		return fmt.Errorf("msisdn: invalid enum value for primary_identity_type field: %q", pit)
	}
}
